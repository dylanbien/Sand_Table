import numpy as nm
period = 100
degrees_per_second = period / 360.0

def cart2pol(x, y):
    rho = np.sqrt(x**2 + y**2)
    phi = np.arctan2(y, x)
    return(rho, phi)

def pol2cart(rho, phi):
    x = rho * np.cos(phi)
    y = rho * np.sin(phi)
    return(x, y)

def move_in_straight_line (self, sides):


    angle_change = 360 / sides

    increments = angle_change / 5.0

    starting_polar = [5, 0]
    ending_polar = [ starting_polar[0], starting_polar[1] + angle_change ]

    starting_x, starting_y = pol2cart(starting_polar[0], starting_polar[1])
    ending_x, ending_y = pol2cart(ending_polar[0], ending_polar[1])

    change = [ ending_x - starting_x, ending_y - starting_y ]

def system_of_equations (

from scipy.optimize import fsolve
import math
import numpy as np

def equations(r ):
    x,y,z = p
    f1 = (1 - 2*math.cos(math.radians(x)) + 2*math.cos(math.radians(y)) - 2*math.cos(math.radians(z)) + 0.8)
    f2 = (1 - 2*math.cos(math.radians(5*x)) + 2*math.cos(math.radians(5*y)) - 2*math.cos(math.radians(5*z)))
    f3 = (1 - 2*math.cos(math.radians(7*x)) + 2*math.cos(math.radians(7*y)) - 2*math.cos(math.radians(7*z)))
    return (f1,f2,f3)

x,y,z = fsolve(equations,(0,0,0))

print equations((x,y,z))